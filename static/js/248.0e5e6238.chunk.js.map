{"version":3,"file":"static/js/248.0e5e6238.chunk.js","mappings":"8PACA,EAAiC,sC,SCyEjC,EArEsB,WAAO,IAAD,IAC1B,GAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAsCF,EAAAA,EAAAA,UAAS,IAA/C,eAAOG,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAcC,EAAAA,EAAAA,SAAO,GACrBC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,EAAAA,IAAA,6CAE0CP,EAF1C,6DAIGQ,MAAK,SAAAC,GAAO,OAAIZ,EAAcY,EAAQC,KAA1B,GAChB,GAAE,CAACV,KACJW,EAAAA,EAAAA,UAAQ,WACN,GAAIT,EAAYU,QACdV,EAAYU,SAAU,MADxB,CAIA,IAAQC,EACNjB,EADMiB,YAAaC,EACnBlB,EADmBkB,MAAOC,EAC1BnB,EAD0BmB,aAAcC,EACxCpB,EADwCoB,aAAcC,EACtDrB,EADsDqB,OAAQC,EAC9DtB,EAD8DsB,SAE1DR,GAAOS,EAAAA,EAAAA,IAAOC,EAAAA,EAAAA,GAAML,EAAc,aAAc,IAAIM,MAAS,QACnEtB,EAAe,CACbuB,IAAKT,EAAW,0CACuBA,GACnC,oDACJU,KAAMb,EACNc,UAAWR,EACXC,OAAQA,EAAOQ,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IACxBT,SAAAA,EACAJ,MAAAA,GAZD,CAcF,GAAE,CAAClB,EAAYM,IAChB,IAAM0B,EAAY,oBAAGxB,EAASyB,aAAZ,aAAG,EAAgBC,YAAnB,QAA2B,UACrCR,EAAkDxB,EAAlDwB,IAAKC,EAA6CzB,EAA7CyB,KAAMC,EAAuC1B,EAAvC0B,UAAWP,EAA4BnB,EAA5BmB,OAAQC,EAAoBpB,EAApBoB,SAAUJ,EAAUhB,EAAVgB,MAChD,OACE,iCACE,SAAC,KAAD,CAAMiB,GAAIH,EAAV,6BAEA,iBAAKI,UAAWC,EAAhB,WACE,0BACE,gBAAKC,IAAKZ,EAAKa,IAAKrB,OAEtB,4BACE,0BACGA,EADH,KACYS,EADZ,QAGA,wCAAgBC,MAChB,sCACA,uBAAIN,KACJ,oCACA,uBAAID,WAGR,4BACE,oDACA,2BACE,SAAC,KAAD,CAAMc,GAAG,OAAOF,MAAO,CAAEC,KAAMF,GAA/B,mBAGA,SAAC,KAAD,CAAMG,GAAG,UAAUF,MAAO,CAAEC,KAAMF,GAAlC,4BAKJ,SAAC,KAAD,MAGL,C","sources":["webpack://react-homework-template/./src/components/page/MoviesDetails/MoviesDetails.module.css?5d1f","components/page/MoviesDetails/MoviesDetails.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"movieContainer\":\"MoviesDetails_movieContainer__rdbiK\"};","import { useState, useEffect, useRef, useMemo } from 'react';\nimport { useParams, Outlet, Link, useLocation } from 'react-router-dom';\nimport axios from 'axios';\nimport { format, parse } from 'date-fns';\nimport css from './MoviesDetails.module.css';\nconst MoviesDetails = () => {\n  const [activMovie, setActivMovie] = useState('');\n  const [renderMovie, setRenderMovie] = useState('');\n  const { movieId } = useParams();\n  const firstRender = useRef(true);\n  const location = useLocation();\n\n  useEffect(() => {\n    axios\n      .get(\n        `https://api.themoviedb.org/3/movie/${movieId}?api_key=0fe50c86842745b16f2f012241d0925e&language=en-US`\n      )\n      .then(results => setActivMovie(results.data));\n  }, [movieId]);\n  useMemo(() => {\n    if (firstRender.current) {\n      firstRender.current = false;\n      return;\n    }\n    const { poster_path, title, release_date, vote_average, genres, overview } =\n      activMovie;\n    const data = format(parse(release_date, 'yyyy-mm-dd', new Date()), 'yyyy');\n    setRenderMovie({\n      img: poster_path\n        ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n        : 'https://full-hd.info/komediya/kenny-1/kenny-1.jpg',\n      date: data,\n      userScore: vote_average,\n      genres: genres.map(genre => genre.name),\n      overview,\n      title,\n    });\n  }, [activMovie, firstRender]);\n  const backLinkHref = location.state?.from ?? '/movies';\n  const { img, date, userScore, genres, overview, title } = renderMovie;\n  return (\n    <>\n      <Link to={backLinkHref}>Back to search</Link>\n\n      <div className={css.movieContainer}>\n        <div>\n          <img src={img} alt={title} />\n        </div>\n        <div>\n          <h1>\n            {title} ({date})\n          </h1>\n          <p>User Score: {userScore}</p>\n          <h2>Overview</h2>\n          <p>{overview}</p>\n          <h2>Genres</h2>\n          <p>{genres}</p>\n        </div>\n      </div>\n      <div>\n        <h3>Additional information</h3>\n        <ul>\n          <Link to=\"cast\" state={{ from: backLinkHref }}>\n            Cast\n          </Link>\n          <Link to=\"reviews\" state={{ from: backLinkHref }}>\n            Reviews\n          </Link>\n        </ul>\n      </div>\n      <Outlet />\n    </>\n  );\n};\nexport default MoviesDetails;\n"],"names":["useState","activMovie","setActivMovie","renderMovie","setRenderMovie","movieId","useParams","firstRender","useRef","location","useLocation","useEffect","axios","then","results","data","useMemo","current","poster_path","title","release_date","vote_average","genres","overview","format","parse","Date","img","date","userScore","map","genre","name","backLinkHref","state","from","to","className","css","src","alt"],"sourceRoot":""}