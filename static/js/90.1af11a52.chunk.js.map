{"version":3,"file":"static/js/90.1af11a52.chunk.js","mappings":"4MA4DA,UAxDe,WACb,OAAoCA,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAAkDF,EAAAA,EAAAA,UAAS,IAA3D,eAAOG,EAAP,KAA0BC,EAA1B,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAYJ,EAAaK,IAAI,SACnC,GAA0BX,EAAAA,EAAAA,WAAS,kBAAMU,GAAa,EAAnB,IAAnC,eAAOE,EAAP,KAAcC,EAAd,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACM,KAAVF,GAGJG,EAAAA,EAAAA,IAAA,kHAE+GH,EAF/G,gCAIGI,MAAK,SAAAC,GACJb,EAAqBa,EAAQC,KAAKD,QACnC,GACJ,GAAE,CAACL,KAGF,iCACE,kBACEO,OAAO,GACPC,SAAU,SAAAC,GACRA,EAAEC,iBACFf,EAAgB,CAAEgB,MAAOtB,IACzBY,EAASZ,EACV,EANH,WAQE,kBACEuB,KAAK,OACLC,KAAK,SACLC,MAAOzB,EACP0B,SAAU,SAAAN,GACRnB,EAAcmB,EAAEO,cAAcF,MAC/B,KAEH,kBAAOG,QAAQ,YACf,mBAAQL,KAAK,SAAb,uBAEDrB,EAAkB2B,OAAS,IAC1B,wBACG3B,EAAkB4B,KAAI,SAAAR,GAAK,OAC1B,yBACE,SAAC,KAAD,CAAMS,GAAE,kBAAaT,EAAMU,IAAMC,MAAO,CAAEC,KAAM3B,GAAhD,SACGe,EAAMa,SAFFb,EAAMU,GADW,QAWrC,C","sources":["components/page/Movies/Movies.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Movies = () => {\n  const [inputValue, setInputValue] = useState('');\n  const [arrayMovieByQuery, setArrayMoviebyQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams();\n  const location = useLocation();\n  const movieName = searchParams.get('movie');\n  const [query, setQuery] = useState(() => movieName || '');\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?api_key=0fe50c86842745b16f2f012241d0925e&language=en-US&query=${query}&page=1&include_adult=false`\n      )\n      .then(results => {\n        setArrayMoviebyQuery(results.data.results);\n      });\n  }, [query]);\n\n  return (\n    <>\n      <form\n        action=\"\"\n        onSubmit={e => {\n          e.preventDefault();\n          setSearchParams({ movie: inputValue });\n          setQuery(inputValue);\n        }}\n      >\n        <input\n          type=\"text\"\n          name=\"search\"\n          value={inputValue}\n          onChange={e => {\n            setInputValue(e.currentTarget.value);\n          }}\n        />\n        <label htmlFor=\"search\"></label>\n        <button type=\"submit\">Search</button>\n      </form>\n      {arrayMovieByQuery.length > 1 && (\n        <ul>\n          {arrayMovieByQuery.map(movie => (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["useState","inputValue","setInputValue","arrayMovieByQuery","setArrayMoviebyQuery","useSearchParams","searchParams","setSearchParams","location","useLocation","movieName","get","query","setQuery","useEffect","axios","then","results","data","action","onSubmit","e","preventDefault","movie","type","name","value","onChange","currentTarget","htmlFor","length","map","to","id","state","from","title"],"sourceRoot":""}