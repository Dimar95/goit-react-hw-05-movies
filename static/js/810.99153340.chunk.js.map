{"version":3,"file":"static/js/810.99153340.chunk.js","mappings":"qLACA,EAAyB,uB,SCkBzB,EAhBe,WACb,OACE,gBAAKA,UAAWC,EAAhB,UACE,SAAC,KAAD,CACEC,OAAO,KACPC,MAAM,KACNC,MAAM,UACNC,UAAU,eACVC,OAAO,OACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,KAIhB,C,oICjBD,G,QAAuB,sBAAvB,EAA0D,4BAA1D,EAAqG,6BAArG,EAA4I,wBAA5I,EAAiL,2BAAjL,EAAyN,2B,mBCwGzN,EAhGe,WAAO,IAAD,EACnB,GAAkDC,EAAAA,EAAAA,UAAS,IAA3D,eAAOC,EAAP,KAA0BC,EAA1B,KACA,GAAwCC,EAAAA,EAAAA,IAAgB,IAAxD,eAAOC,EAAP,KAAqBC,EAArB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,EAAS,UAAGJ,EAAaK,IAAI,gBAApB,QAAgC,GAC/C,GAA4BT,EAAAA,EAAAA,UAAS,IAArC,eAAOU,EAAP,KAAeC,EAAf,KACA,GAA0BX,EAAAA,EAAAA,WAAS,kBAAMQ,CAAN,IAAnC,eAAOI,EAAP,KAAcC,EAAd,KAgCA,OA9BAC,EAAAA,EAAAA,YAAU,WACM,KAAVF,IAIJD,EAAU,UACVI,EAAAA,EAAAA,IAAA,kHAE+GH,EAF/G,gCAIGI,MAAK,SAAAC,GACJf,EAAqBe,EAAQC,KAAKD,SAClCN,EAAUM,EAAQC,KAAKD,QAAQE,OAAS,EAAI,UAAY,WACzD,IACAC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,EAAMG,SAClBb,EAAU,SACVc,EAAAA,GAAAA,MAAA,UAAeJ,EAAMG,SAAW,CAC9BE,SAAU,aACVC,UAAW,IACXC,iBAAiB,EACjBC,cAAc,EACdC,cAAc,EACdC,WAAW,EACXC,cAAUC,EACVC,MAAO,SAEV,IACJ,GAAE,CAACtB,KAGF,iCACE,kBACEuB,OAAO,GACP7C,UAAWC,EACX6C,SAAU,SAAAC,GACRA,EAAEC,iBACFzB,EAASL,EACV,EANH,WAQE,kBACElB,UAAWC,EACXgD,KAAK,OACLC,KAAK,SACLC,MAAOjC,EACPkC,SAAU,SAAAL,GACRhC,EAAgB,CAAEO,MAAOyB,EAAEM,OAAOF,OACnC,KAEH,kBAAOG,QAAQ,YACf,mBAAQtD,UAAWC,EAAkBgD,KAAK,SAA1C,uBAIU,YAAX7B,IACC,eAAIpB,UAAWC,EAAf,SACGU,EAAkB4C,KAAI,SAAAC,GAAK,OAC1B,eAAmBxD,UAAWC,EAA9B,UACE,SAAC,KAAD,CACED,UAAWC,EACXwD,GAAE,kBAAaD,EAAME,IACrBC,MAAO,CAAEC,KAAM5C,GAHjB,SAKGwC,EAAMK,SANFL,EAAME,GADW,MAapB,aAAXtC,IAAyB,8CACd,WAAXA,IAAuB,SAAC0C,EAAA,EAAD,IACZ,UAAX1C,IACC,SAAC,KAAD,CACEgB,SAAS,aACTC,UAAW,IACXC,iBAAiB,EACjByB,aAAa,EACbxB,cAAY,EACZyB,KAAK,EACLC,kBAAgB,EAChBxB,WAAS,EACTD,cAAY,EACZI,MAAM,YAKf,C","sources":["webpack://react-homework-template/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://react-homework-template/./src/components/page/Movies/Movies.module.css?b5a8","components/page/Movies/Movies.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"loader\":\"Loader_loader__+lRPl\"};","import { Grid } from 'react-loader-spinner';\n\nimport css from './Loader.module.css';\nconst Loader = () => {\n  return (\n    <div className={css.loader}>\n      <Grid\n        height=\"80\"\n        width=\"80\"\n        color=\"#3f51b5\"\n        ariaLabel=\"grid-loading\"\n        radius=\"12.5\"\n        wrapperStyle={{}}\n        wrapperClass=\"\"\n        visible={true}\n      />\n    </div>\n  );\n};\nexport default Loader;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Movies_form__6yqht\",\"inputSearch\":\"Movies_inputSearch__N2nik\",\"buttonSearch\":\"Movies_buttonSearch__ANyLv\",\"moviesS\":\"Movies_moviesS__b5wRc\",\"moviesItem\":\"Movies_moviesItem__0BQFA\",\"moviesList\":\"Movies_moviesList__ITGt1\"};","import { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport css from './Movies.module.css';\nimport Loader from '../../Loader/Loader';\n\nconst Movies = () => {\n  const [arrayMovieByQuery, setArrayMoviebyQuery] = useState('');\n  const [searchParams, setSearchParams] = useSearchParams('');\n  const location = useLocation();\n  const movieName = searchParams.get('query') ?? '';\n  const [status, setStatus] = useState('');\n  const [query, setQuery] = useState(() => movieName);\n\n  useEffect(() => {\n    if (query === '') {\n      return;\n    }\n\n    setStatus('loader');\n    axios\n      .get(\n        `https://api.themoviedb.org/3/search/movie?api_key=0fe50c86842745b16f2f012241d0925e&language=en-US&query=${query}&page=1&include_adult=false`\n      )\n      .then(results => {\n        setArrayMoviebyQuery(results.data.results);\n        setStatus(results.data.results.length > 0 ? 'success' : 'notFound');\n      })\n      .catch(error => {\n        console.log(error.message);\n        setStatus('error');\n        toast.error(`${error.message}`, {\n          position: 'top-center',\n          autoClose: 5000,\n          hideProgressBar: false,\n          closeOnClick: true,\n          pauseOnHover: true,\n          draggable: true,\n          progress: undefined,\n          theme: 'light',\n        });\n      });\n  }, [query]);\n\n  return (\n    <>\n      <form\n        action=\"\"\n        className={css.form}\n        onSubmit={e => {\n          e.preventDefault();\n          setQuery(movieName);\n        }}\n      >\n        <input\n          className={css.inputSearch}\n          type=\"text\"\n          name=\"search\"\n          value={movieName}\n          onChange={e => {\n            setSearchParams({ query: e.target.value });\n          }}\n        />\n        <label htmlFor=\"search\"></label>\n        <button className={css.buttonSearch} type=\"submit\">\n          Search\n        </button>\n      </form>\n      {status === 'success' && (\n        <ul className={css.moviesList}>\n          {arrayMovieByQuery.map(movie => (\n            <li key={movie.id} className={css.moviesItem}>\n              <Link\n                className={css.moviesS}\n                to={`/movies/${movie.id}`}\n                state={{ from: location }}\n              >\n                {movie.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n      {status === 'notFound' && <div>Movies not found</div>}\n      {status === 'loader' && <Loader />}\n      {status === 'error' && (\n        <ToastContainer\n          position=\"top-center\"\n          autoClose={5000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          theme=\"light\"\n        />\n      )}\n    </>\n  );\n};\nexport default Movies;\n"],"names":["className","css","height","width","color","ariaLabel","radius","wrapperStyle","wrapperClass","visible","useState","arrayMovieByQuery","setArrayMoviebyQuery","useSearchParams","searchParams","setSearchParams","location","useLocation","movieName","get","status","setStatus","query","setQuery","useEffect","axios","then","results","data","length","catch","error","console","log","message","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","action","onSubmit","e","preventDefault","type","name","value","onChange","target","htmlFor","map","movie","to","id","state","from","title","Loader","newestOnTop","rtl","pauseOnFocusLoss"],"sourceRoot":""}